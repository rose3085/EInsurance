// <auto-generated />
using System;
using EInsurance.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EInsurance.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EInsurance.Server.Models.AddonPackages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PolicyDetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PolicyDetailId");

                    b.ToTable("addonPackages");
                });

            modelBuilder.Entity("EInsurance.Server.Models.CompanyDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimsRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("companyDetails");
                });

            modelBuilder.Entity("EInsurance.Server.Models.PolicyDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyNameId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpiryAge")
                        .HasColumnType("int");

                    b.Property<string>("MaturityBenefits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxCover")
                        .HasColumnType("int");

                    b.Property<int>("MaxEntryAge")
                        .HasColumnType("int");

                    b.Property<int>("MinCover")
                        .HasColumnType("int");

                    b.Property<int>("MinEntryAge")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PolicyLaunchDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PolicyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskCommencementDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RiskCommencementPeriod")
                        .HasColumnType("int");

                    b.Property<string>("SurrenderPolicy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyNameId");

                    b.ToTable("policyDetails");
                });

            modelBuilder.Entity("EInsurance.Server.Models.PolicyTerms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PolicyDetailsId")
                        .HasColumnType("int");

                    b.Property<int>("PolicyTerm")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PolicyDetailsId");

                    b.ToTable("policyTerms");
                });

            modelBuilder.Entity("EInsurance.Server.Models.AddonPackages", b =>
                {
                    b.HasOne("EInsurance.Server.Models.PolicyDetails", "PolicyDetail")
                        .WithMany("Packages")
                        .HasForeignKey("PolicyDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PolicyDetail");
                });

            modelBuilder.Entity("EInsurance.Server.Models.PolicyDetails", b =>
                {
                    b.HasOne("EInsurance.Server.Models.CompanyDetails", "CompanyName")
                        .WithMany("Policies")
                        .HasForeignKey("CompanyNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyName");
                });

            modelBuilder.Entity("EInsurance.Server.Models.PolicyTerms", b =>
                {
                    b.HasOne("EInsurance.Server.Models.PolicyDetails", "PolicyDetails")
                        .WithMany("PolicyTerm")
                        .HasForeignKey("PolicyDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PolicyDetails");
                });

            modelBuilder.Entity("EInsurance.Server.Models.CompanyDetails", b =>
                {
                    b.Navigation("Policies");
                });

            modelBuilder.Entity("EInsurance.Server.Models.PolicyDetails", b =>
                {
                    b.Navigation("Packages");

                    b.Navigation("PolicyTerm");
                });
#pragma warning restore 612, 618
        }
    }
}
